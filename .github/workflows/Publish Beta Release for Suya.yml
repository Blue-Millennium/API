name: Publish Beta Release for Suya Downloader

on:
  push:
    branches:
      - main # 触发动作的分支，根据实际情况修改

jobs:
  build_and_publish:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Code
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.x # 使用您项目对应的Python版本

    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pyinstaller # 安装PyInstaller以打包Python脚本

    - name: Build Executables
      run: |
        pyinstaller --onefile Bluecraft\ Downloader/Python_release/Launcher.py
        pyinstaller --onefile Bluecraft\ Downloader/Python_release/Updater.py

    - name: Move Built Executables
      run: |
        mkdir release_files
        mv dist/Launcher.exe release_files/
        mv dist/Updater.exe release_files/

    - name: Copy Resources
      run: |
        cp -r Bluecraft\ Downloader/Python_release/Resources release_files/

    - name: Create Zip Archive
      run: |
        cd release_files
        zip -r ../Bluecraft_Downloader_Beta.zip ./*

    - name: Create GitHub Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: beta_release
        release_name: Beta Release
        draft: false
        prerelease: true

    - name: Upload Zip Artifact
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./Bluecraft_Downloader_Beta.zip
        asset_name: Bluecraft_Downloader_Beta.zip
        asset_content_type: application/zip
    - name: Delete Existing Beta Release Tag
      if: github.event_name == 'push' && github.ref == 'refs/heads/main' # 确保只在主分支上执行
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        echo "Deleting existing beta_release tag, if any..."
        existing_tag=$(curl -sL -H "Authorization: token $GITHUB_TOKEN" https://api.github.com/repos/${{ github.repository }}/git/ref/tags/beta_release | jq -r '.object.sha')
        if [ "$existing_tag" != "null" ]; then
          curl -X DELETE -H "Authorization: token $GITHUB_TOKEN" https://api.github.com/repos/${{ github.repository }}/git/refs/tags/beta_release
          echo "Existing beta_release tag deleted."
        else
          echo "No existing beta_release tag found."
        fi
